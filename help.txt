# help txt

"id":"",
"filmmaker":"",
"title":"",
"year":"",
"logline":"",
"film_type":"",
"genre":"",
"thumbnail":"",
"status":"",

"rent_price":"",
"rental_hours":"",
"buy_price":"",
"full_film_duration":"",
"views_count":"",
"total_earning":"",
"trailer_hls_url":"",
"film_hls_url":"",



#
----------
from django.db import models
from django.conf import settings

class Film(models.Model):
    title = models.CharField(max_length=255)
    price_buy = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True)
    price_rent = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True)
    rent_duration = models.DurationField(default="3 days")  # Example: 3 days rental

    def __str__(self):
        return self.title


class UserFilmTransaction(models.Model):
    PURCHASE_CHOICES = [
        ("buy", "Buy"),
        ("rent", "Rent"),
    ]

    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    film = models.ForeignKey(Film, on_delete=models.CASCADE)
    transaction_type = models.CharField(max_length=10, choices=PURCHASE_CHOICES)
    price = models.DecimalField(max_digits=8, decimal_places=2)
    created_at = models.DateTimeField(auto_now_add=True)

    # For rentals
    expires_at = models.DateTimeField(null=True, blank=True)

    def is_active(self):
        """Check if rental is still valid or permanent buy"""
        if self.transaction_type == "buy":
            return True
        if self.transaction_type == "rent" and self.expires_at:
            return self.expires_at > timezone.now()
        return False

    def __str__(self):
        return f"{self.user} - {self.film} ({self.transaction_type})"


##
class FilmSerializer(serializers.ModelSerializer):
    status = serializers.CharField(source="get_status_display", read_only=True)
    film_type = serializers.CharField(source="get_film_type_display", read_only=True)

    class Meta:
        model = Film
        fields = ["id", "title", "status", "film_type", "created_at"]
