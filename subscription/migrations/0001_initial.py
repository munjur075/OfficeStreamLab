# Generated by Django 5.2.5 on 2025-08-23 05:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlanFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanFeatureAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.planfeature')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(blank=True, help_text='Optional: store an icon name (FontAwesome/Bootstrap) or emoji.', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_highlighted', models.BooleanField(default=False)),
                ('limit_value', models.PositiveIntegerField(blank=True, help_text='Set a numeric limit for the whole plan. Leave empty/0 for unlimited.', null=True)),
                ('duration_days', models.PositiveIntegerField(default=30, help_text='Plan duration in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('features', models.ManyToManyField(related_name='plans', through='subscription.PlanFeatureAssignment', to='subscription.planfeature')),
            ],
        ),
        migrations.AddField(
            model_name='planfeatureassignment',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.subscriptionplan'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('reelbux', 'ReelBux'), ('distro', 'Distro'), ('system', 'System')], max_length=20)),
                ('tx_type', models.CharField(choices=[('fund', 'Add Fund'), ('transfer', 'Transfer Distro â†’ ReelBux'), ('withdraw', 'Withdraw from Distro'), ('purchase', 'Buy Film'), ('rent', 'Rent Film'), ('commission', 'Distro Commission'), ('subscription', 'AI Subscription')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('balance_type', models.CharField(blank=True, choices=[('reelbux', 'ReelBux'), ('distro', 'Distro')], max_length=20, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('reference_id', models.CharField(blank=True, help_text='Stripe/PayPal TXN ID', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('reelbux', 'ReelBux'), ('stripe', 'Stripe'), ('paypal', 'PayPal')], max_length=20)),
                ('subscription_id', models.CharField(max_length=255, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used_value', models.PositiveIntegerField(default=0)),
                ('free_used_value', models.PositiveIntegerField(default=0)),
                ('limit_value', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subscriptions', to='subscription.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel_bux_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('distro_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscription.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Withdrawal',
                'verbose_name_plural': 'Withdrawals',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='planfeatureassignment',
            unique_together={('plan', 'feature')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'created_at'], name='subscriptio_user_id_541353_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['tx_type'], name='subscriptio_tx_type_436ac2_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['balance_type'], name='subscriptio_balance_5f7ff6_idx'),
        ),
    ]
